application:
  configuration:
    conf.selenium-version: "2.45.0"
    conf.slave-node-count: "0"
    conf.recipes: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-selenium-grid-cookbooks-stable-0475c1e.tar.gz"

  interfaces:
    conf: 
      selenium-version: bind(selenium-grid#input.selenium-version)
      slave-node-count: bind(selenium-grid#input.node-count)
      recipes: bind(selenium-grid#input.recipes)
    endpoints:
     console-url: bind(selenium-grid#result.console-url)
     remote-url: bind(selenium-grid#result.remote-url)
    hosts:
      hub: bind(selenium-grid#result.hub-host)
      nodes: bind(selenium-grid#result.node-hosts)
    actions:
      scale: bind(selenium-grid#actions.scale)
      re-start: bind(selenium-grid#actions.re-start)
      change-version: bind(selenium-grid#actions.change-version)

  components:
    selenium-grid:
      type: workflow.Instance
      interfaces:
        input:
          selenium-version:
            type: configuration(string)
            name: Selenium Version
          node-count:
            type: configuration(string)
            name: Count of Additional Nodes
          recipes:
            type: configuration(string)
            name: Recipes Url
        result:
          console-url:
            type: publish-signal(string)
            name: Console
          remote-url:
            type: publish-signal(string)
            name: Remote Url
          hub-host:
            type: publish-signal(string)
            name: Hub
          node-hosts:
            type: publish-signal(list<string>)
            name: Nodes
        actions:
          re-start:
            type: receive-command()
            name: Restart Hosts
          scale:
            type: receive-command( int node-count => list<string> node-hosts)
            name: scale (deprecated, use reconfigure)
          change-version:
            type: receive-command( string selenium-version )
            name: change version (deprecated, use reconfigure)

      configuration:
        configuration.triggers: 
          input.node-count: scale
          input.selenium-version: change-version
        configuration.propagateStatus: [ scale, change-version ]

        configuration.workflows:
          launch:
            steps:
              provision-hub:
                action: selenium-provision
                phase: provision-hub
                parameters:
                  node-count: 1
                  role: hub
                output:
                  selenium-hub: hosts

              deploy-hub:
                action: .deploy
                precedingPhases: [ provision-hub ]
                phase: deploy-hub
                parameters:
                  run-list: ["recipe[selenium::grid_hub]"]
                  role: hub

              deploy-node-on-hub:
                action: .deploy
                precedingPhases: [ provision-hub , deploy-hub ]
                parameters:
                  hub-host: "{$.selenium-hub[0]}"
                  role: hub

              deploy-slave-nodes:
                action: .scale
                precedingPhases: [ provision-hub ]
                parameters:
                  hub-host: "{$.selenium-hub[0]}"
                output:
                  node-hosts: node-hosts

            return:
              console-url:
                description: Url to grid console
                value: "http://{$.selenium-hub[0]}:4444/grid/console"
              remote-url:
                description: Url to grid console
                value: "http://{$.selenium-hub[0]}:4444/wd/hub"
              hub-host:
                value: "{$.selenium-hub[0]}"
              node-hosts:
                value: "{$.node-hosts}"

          #used for trigger, context is known
          scale:
            steps:
              scale:
                action: .scale
                parameters:
                  hub-host: "{$.hub-host}"
                output:
                  node-hosts: node-hosts
            return:
              node-hosts:
                value: "{$.node-hosts}"
          .scale:
            parameters:
              hub-host:
                description: hub host
            steps:
              provision-node:
                action: selenium-provision
                phase: provision-node
                parameters:
                  node-count: "{$.node-count}" #this goes from configuration
                output:
                  node-hosts: hosts
              deploy-node:
                action: .deploy
                precedingPhases: [ provision-node ]
                parameters:
                  hub-host: "{$.hub-host}"
            return:
              node-hosts:
                value: "{$.node-hosts}"

          re-start:
            steps:
              restart-hub:
                action: .deploy
                parameters:
                  role: hub
                  run-list: ["recipe[selenium::grid_hub_restart]" ]
              restart-hub-node:
                action: .deploy
                precedingPhases: [ restart-hub ]
                parameters:
                  role: hub
                  run-list: ["recipe[selenium::grid_node_restart]" ]
              restart-nodes:
                action: .deploy
                parameters:
                  role: node
                  run-list: ["recipe[selenium::grid_node_restart]" ]

          selenium-provision:
            parameters:
              node-count:
                description: Additional nodes in grid
                default: 1
                min: 1
                max: 20
              role:
                description: VM role
                default: node
              #these should be overriden from policies
              vmIdentity:
                default: ubuntu
              imageId:
                default: us-east-1/ami-d0f89fb9
              hardwareId:
                default: m1.small

            steps:
              provision-nodes:
                action: provisionVms
                parameters:
                  roleName: "{$.role}"
                  targetQuantity: "{$.node-count}"
                  vmIdentity: "{$.vmIdentity}"
                  imageId: "{$.imageId}"
                  hardwareId: "{$.hardwareId}"
                output:
                  hosts: ips
            return:
              hosts:
                value: "{$.hosts}"

          change-version:
            steps:
              get-env-props:
                action: getEnvironmentProperties
                phase: get-env-props
                output:
                  props: result
              update-version-hub:
                action: .deploy
                phase: update-version
                precedingPhases: [ get-env-props ]
                parameters:
                  run-list: ["recipe[selenium::update_version]"]
                  hub-host: "{$.hub-host}"
                  role: hub
              update-version-node:
                action: .deploy
                phase: update-version-node
                precedingPhases: [ get-env-props ]
                parameters:
                  run-list: ["recipe[selenium::update_version]"]
                  hub-host: "{$.hub-host}"
                  role: node
              restart:
                action: re-start
                phase: restart
                precedingPhases: [ update-version, update-version-node ]
   
          .deploy:
            parameters:
              run-list:
                description: Run chef cookbooks
                default: ["recipe[selenium::firefox]", "recipe[selenium::chrome]", "recipe[selenium::grid_node]"]
              role:
                description: VM role
                default: node
              hub-host:
                default: 127.0.0.1
              selenium-version:
                default: "{$.selenium-version}"
              recipes:
                default: "{$.recipes}"
            steps:
              install-selenium:
                action: chefrun
                parameters:
                  roles: ["{$.role}"]
                  runList: ${run-list}
                  version: 11.18.6
                  isSolo: true
                  recipeUrl: "{$.recipes}"
                  jattrs:
                    selenium:
                      server:
                        cleanUpCycle: 20000
                        timeout: 120000
                        version: "{$.selenium-version}"
                      node:
                        hubhost: "{$.hub-host}"
